plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.dokka'
    id 'maven-publish'
}

android {
    namespace 'knf.hydra.tools.anime_music'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api 'com.github.hydra-app:core:1.0-rc2'
    api 'com.github.hydra-app.tools:core-animes:5804c557f9'
    api 'com.github.hydra-app.tools:core-ktx:5804c557f9'
    dokkaPlugin 'org.jetbrains.dokka:android-documentation-plugin:1.8.10'
}

tasks.dokkaHtml.configure {
    outputDirectory.set(file("$rootDir/libs/anime_music/docs"))
    dokkaSourceSets {
        named("main") {
            includes.from("README.md")
            noAndroidSdkLink.set(false)
            sourceLink {
                remoteUrl.set(java.net.URL("https://github.com/jordyamc/hydra_core/tree/master/core/src/main/java"))
                remoteLineSuffix.set("#L")
            }
        }
    }
}

task dokkaJavadocJar(type: Jar) {
    dependsOn(tasks.dokkaJavadoc)
    def directories = new ArrayList<Object>()
    tasks.dokkaJavadoc.each {
        directories.add(it.outputDirectory)
    }
    from(directories)
    archiveClassifier.set("javadoc")
}

task dokkaHtmlJar(type: Jar) {
    dependsOn(tasks.dokkaHtml)
    def directories = new ArrayList<Object>()
    tasks.dokkaHtml.each {
        directories.add(it.outputDirectory)
    }
    from(directories)
    archiveClassifier.set("html-doc")
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives dokkaJavadocJar
    archives dokkaHtmlJar
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                url = uri("$buildDir/repository")
            }
        }
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'knf.hydra.tools'
                artifactId = 'anime_music'
                version = '1.0'
                artifact(androidSourcesJar)
                artifact(dokkaJavadocJar)
                artifact(dokkaHtmlJar)
            }
        }
    }
}